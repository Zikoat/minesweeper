{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"prin",
				"printThis"
			],
			[
				"mine",
				"mineArray"
			],
			[
				"min",
				"mineArray"
			],
			[
				"mines",
				"minesweeper"
			],
			[
				"pl",
				"playerMovement"
			],
			[
				"pla",
				"Player"
			],
			[
				"rota",
				"rotationSpeed"
			],
			[
				"ro",
				"rotate"
			]
		]
	},
	"buffers":
	[
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 587,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var prompt = require('prompt');\nvar minesweeper = require('minesweeper');\nvar chalk = require('chalk');\n\nvar mineArray = minesweeper.generateMineArray({\n\trows: 9,\n\tcols: 9,\n\tmines: 10\n});\n\nvar board = new minesweeper.Board(mineArray);\nvar grid = board.grid();\n\n\n/*\nvar board = [];\nvar game = {};\ngame.over = false;\n\nfunction Tile() {\n\tthis.isUncovered = false;\n\tthis.isBomb = false;\n}\n\nTile.prototype.toString = function() {\n\tif(this.isUncovered) {\n\n\t\tif (this.isBomb) {\n\t\t\tgame.over = true;\n\t\t\treturn \" ¤ \".bgRed;\n\t\t} else {\n\t\t\treturn (\" \" + this.getNeighbouringBombs() + \" \");\n\t\t}\n\n\t} else {\n\t\t//unknown\n\t\treturn \"[ ]\";\n\t}\n};\n\n//returns amount of bomb neighbours, and sets\nTile.prototype.getNeighbouringBombs = function(){\n\n\tvar bombNeighbours = 0;\n\n\tfor (var i = -1; i <= 1; i++) {\n\t\tfor (var j = -1; j <= 1; j++) {\n\n\t\t\tvar x=this.x+i;\n\t\t\tvar y=this.y+j;\n\n\t\t\tif (x>=0 && x<game.x && y>=0 && y<game.y) {\n\t\t\t\tvar neighbour = board[this.x + i][this.y + j];\n\n\t\t\t\tif(this!==neighbour && neighbour.isBomb){\n\t\t\t\t\tbombNeighbours++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tvar str = bombNeighbours.toString();\n\tswitch(bombNeighbours) {\n\t\tcase 0:\n\t\t\tstr = \" \";\n\t\t\tbreak;\n\n\t\tcase 1:\n\t\t\tstr = str.bold.blue;\n\t\t\tbreak;\n\n\t\tcase 2:\n\t\t\tstr = str.green;\n\t\t\tbreak;\n\n\t\tcase 3:\n\t\t\tstr = str.red;\n\t\t\tbreak;\n\n\t\tcase 4:\n\t\t\tstr = str.blue;\n\t\t\tbreak;\n\n\t\tcase 5:\n\t\t\tstr = str.yellow;\n\t\t\tbreak;\n\n\t\tcase 6:\n\t\t\tstr = str.cyan;\n\t\t\tbreak;\n\n\t\tcase 7:\n\t\t\tstr = str.bgWhite.black;\n\t\t\tbreak;\n\n\t\tcase 8:\n\t\t\tstr = str.grey;\n\t}\n\treturn str;\n};\n\n//sets variables(saves), and prints title\nvar newGame=function(x,y,bombs){\n\tgame.x = x;\n\tgame.y = y;\n\tconsole.log(\"newGame \" + x + \",\" + y + \" (\"+ bombs+\")\");\n\tgame.numberOfBombs = bombs;\n\tif(x*y<=bombs){\n\t\tthrow new Error('Not enough tiles!');\n\t\t//console.log(\"error not enough tiles\");\n\t}\n};\n\n\n\n//sets random tiles to isBomb=true (game.numberOfBombs)\nvar insertBombs=function(){\n\tbombsHaveBeenPlanted = true;\n\tvar amount=game.numberOfBombs;\n\n\tfor (var i = 0; i < amount; i++) {\n\t\tvar x = Math.floor(Math.random() * game.x);\n\t\tvar y = Math.floor(Math.random() * game.y);\n\n\t\tvar tile = board[x][y];\n\n\t\tif(tile.isBomb || tile.isUncovered) {\n\t\t\ti--;\n\n\t\t} else {\n\t\t\ttile.isBomb = true;\n\t\t}\n\t}\n};\n\n\n\n//prints board, chooses printing format\nvar printBoard=function(){\n\tvar str = \"\";\n\n\tvar x = game.x;\n\tvar y = game.y;\n\n\tvar hiddenTiles = 0;\n\tfor (var i = 0; i < y; i++) {\n\n\t\tfor (var j = 0; j < x; j++) {\n\n\t\t\tvar tile = board[j][i];\n\t\t\t\n\t\t\tstr += tile.toString();\n\t\t\t\n\t\t\tif(!tile.isUncovered){ hiddenTiles++; }\n\t\t\n\t\t}\n\n\t\tstr += \"\\n\";\n\n\t}\n\tconsole.log(str);\n\tif (game.over){\n\t\tconsole.log(\"Game Over!\".red);\n\t\tprocess.exit();\n\t}\n\n\tif(hiddenTiles==game.numberOfBombs){\n\t\tconsole.log(\"You Win!\".green);\n\t\tprocess.exit();\n\t}\n};\n\n\n//gameplay\n\nnewGame(process.argv[2], process.argv[3], process.argv[4]);\n\n\ncreateBoard(game.x, game.y);\n\n\nprintBoard();\n\nvar bombsHaveBeenPlanted = false;\n\nvar ask=function(){\n\nprompt.get(['xTile', 'yTile'], function (err, result) {\n\tconsole.log('x: ' + result.xTile);\n\tconsole.log('y: ' + result.yTile);\n\tvar tile = board[result.xTile][result.yTile];\n\ttile.isUncovered = true;\n\tif(!bombsHaveBeenPlanted) {\n\t\tinsertBombs();\n\t}\n\n\n    printBoard();\n    ask();\n});\n\n\nprompt.start();\n};\n\nask();*/",
			"file": "main.js",
			"file_size": 3514,
			"file_write_time": 131123652835184930,
			"settings":
			{
				"buffer_size": 3201,
				"line_ending": "Windows"
			}
		},
		{
			"file": "infinite website/index.html",
			"settings":
			{
				"buffer_size": 1462,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "infinite website/chunkmanager.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		},
		{
			"file": "infinite website/game.js",
			"settings":
			{
				"buffer_size": 5799,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "mark",
		"selected_items":
		[
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"INST",
				"Package Control: Install Package"
			],
			[
				"tasks ne",
				"Tasks: New document"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"list",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"sublim",
				"SublimeLinter: Enable Linter"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 510.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Workspace/minesweeper",
		"/C/Workspace/minesweeper/infinite website"
	],
	"file_history":
	[
		"/C/Users/xXCancerBoyieXz '/Pictures/wallpaper dumps/2365 Most Amazing Collection of Computer Desktop Wallpapers (Dump) - Previous uploads - 2326 [ECLiPSE]/ECLiPSE.txt",
		"/C/Users/xXCancerBoyieXz '/Pictures/wallpaper dumps/2365 Most Amazing Collection of Computer Desktop Wallpapers (Dump) - Previous uploads - 2326 [ECLiPSE]/Read Me.txt",
		"/C/Workspace/minesweeper/minesweeper.sublime-project",
		"/C/Workspace/cmder/README.md",
		"/C/Users/xXCancerBoyieXz '/AppData/Roaming/Sublime Text 3/Packages/User/Terminal.sublime-settings",
		"/C/Users/xXCancerBoyieXz '/AppData/Roaming/Sublime Text 3/Packages/Terminal/Terminal.sublime-settings",
		"/C/Users/xXCancerBoyieXz '/AppData/Roaming/Sublime Text 3/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/C/Workspace/minesweeper/package.json",
		"/C/Workspace/socketio/node_modules/socket.io-client/socket.io.js",
		"/C/Workspace/ten hundred common words.txt",
		"/C/Workspace/test/boids processing.java",
		"/C/Workspace/socketio/public/assets/8 Bit Space Groove! by HeatleyBros.wav",
		"/C/Workspace/socketio/public/jquery.js",
		"/C/Workspace/flock/game.js",
		"/C/Users/xXCancerBoyieXz '/AppData/Roaming/Sublime Text 3/Packages/PlainTasks/messages/Tutorial.todo",
		"/C/Workspace/socketio/todo.todo",
		"/C/Users/xXCancerBoyieXz '/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Workspace/socketio/socketio.sublime-project"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"color",
			"global",
			"socket"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 587,
						"regions":
						{
						},
						"selection":
						[
							[
								1,
								1
							]
						],
						"settings":
						{
							"auto_complete": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										585,
										586
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										0,
										1
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Materialize/Langs/npm JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3201,
						"regions":
						{
						},
						"selection":
						[
							[
								259,
								259
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2882.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "infinite website/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1462,
						"regions":
						{
						},
						"selection":
						[
							[
								738,
								738
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1448,
										1452
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/tag.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										713,
										717
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 251.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "infinite website/chunkmanager.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "infinite website/game.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5799,
						"regions":
						{
						},
						"selection":
						[
							[
								489,
								489
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 68.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "minesweeper.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\xXCancerBoyieXz '\\Google Drive\\collected school\\skole.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 190.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
